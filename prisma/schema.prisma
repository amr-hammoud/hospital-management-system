generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  DOCTOR
  PATIENT
  ADMIN
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  name     String
  token    String?
  role     UserRole
  doctor   Doctor?
  patient  Patient?
}

model Doctor {
  id           Int             @id @default(autoincrement())
  appointments Appointment[]
  patients     DoctorPatient[]
  departmentID Int
  department   Department      @relation(fields: [departmentID], references: [id])
  userId       Int             @unique
  user         User            @relation(fields: [userId], references: [id])
}

model Patient {
  id           Int             @id @default(autoincrement())
  appointments Appointment[]
  doctors      DoctorPatient[]
  userId       Int             @unique
  user         User            @relation(fields: [userId], references: [id])
}

model DoctorPatient {
  id        Int     @id @default(autoincrement())
  doctorID  Int
  doctor    Doctor  @relation(fields: [doctorID], references: [id])
  patientID Int
  patient   Patient @relation(fields: [patientID], references: [id])

  @@unique([doctorID, patientID])
}

model Department {
  id      Int      @id @default(autoincrement())
  name    String
  doctors Doctor[]
}

enum AppointmentStatus {
  Pending
  Done
}

model Appointment {
  id        Int      @id @default(autoincrement())
  dateTime  DateTime
  duration  Int
  status    AppointmentStatus @default(Pending)
  Accepted  Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  doctorID  Int
  doctor    Doctor   @relation(fields: [doctorID], references: [id])
  patientID Int
  patient   Patient  @relation(fields: [patientID], references: [id])
}
